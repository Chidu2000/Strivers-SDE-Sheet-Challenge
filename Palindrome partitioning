Problem link: https://www.codingninjas.com/studio/problems/palindrome-partitioning_8230726?challengeSlug=striver-sde-challenge&leftPanelTab=0


#include <bits/stdc++.h> 
bool isPalindrome(const string& str, int start, int end) {
    while (start < end) {
        if (str[start] != str[end]) {
            return false;
        }
        start++;
        end--;
    }
    return true;
}

void backtrack(const string& str, int start, vector<string>& current, vector<vector<string>>& result) {
    if (start >= str.length()) {
        result.push_back(current);
        return;
    }
    
    for (int end = start; end < str.length(); end++) {
        if (isPalindrome(str, start, end)) {
            current.push_back(str.substr(start, end - start + 1));
            backtrack(str, end + 1, current, result);
            current.pop_back();
        }
    }
}

vector<vector<string>> partition(string& s) {
    vector<vector<string>> result;
    vector<string> current;
    backtrack(s, 0, current, result);
    return result;
}
