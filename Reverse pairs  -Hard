Problem link : https://www.codingninjas.com/codestudio/problems/reverse-pairs_8230825?challengeSlug=striver-sde-challenge&leftPanelTab=1

#include <bits/stdc++.h> 
int mergeAndCount(vector<int>& arr, int left, int mid, int right) {
    int count = 0;
    int i = left;
    int j = mid + 1;

    while (i <= mid && j <= right) {
        if ((long long)arr[i] > 2LL * arr[j]) {
            count += mid - i + 1;
            j++;
        } else {
            i++;
        }
    }

    vector<int> temp(right - left + 1);
    int k = 0;
    int p1 = left;
    int p2 = mid + 1;

    while (p1 <= mid && p2 <= right) {
        if (arr[p1] <= arr[p2]) {
            temp[k++] = arr[p1++];
        } else {
            temp[k++] = arr[p2++];
        }
    }

    while (p1 <= mid) {
        temp[k++] = arr[p1++];
    }

    while (p2 <= right) {
        temp[k++] = arr[p2++];
    }

    for (int i = left; i <= right; i++) {
        arr[i] = temp[i - left];
    }

    return count;
}

int mergeSortAndCount(vector<int>& arr, int left, int right) {
    if (left >= right) {
        return 0;
    }

    int mid = left + (right - left) / 2;
    int count = 0;

    count += mergeSortAndCount(arr, left, mid);
    count += mergeSortAndCount(arr, mid + 1, right);
    count += mergeAndCount(arr, left, mid, right);

    return count;
}

int reversePairs(vector<int> &arr, int n){
	return mergeSortAndCount(arr, 0, n - 1);
}
